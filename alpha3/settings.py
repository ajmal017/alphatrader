"""
Django settings for alpha3 project.

Generated by 'django-admin startproject' using Django 1.8.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from kombu import Queue,Exchange

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'dmqhd7njsx7@&r#(8&*d50j--0wj5urgborhh=7ocmsevq&($c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1','127.0.0.1:8000','www.erate.in','erate.in','alphatrader.in','www.alphatrader.in','www.alphatrader.dev']

# FCM_APIKEY = "AAAAR98L-8U:APA91bFqUMe6xo-rbpM7oUW1FJwgu8nJOidPpBfP_ESNbOdXjhjlvDNxq2FkO-NNdXUZ2ZumA4nWa-ksCGRlUmW-FJEn_0GeQi1qAX9VNaUaBRi9AV_UW43d2QDhSaWxavzqq3CZbtXX"



# Application definition

INSTALLED_APPS = (
	'channels',
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'core',
	'accounts',
	'dashboard',
	'trader',
	'alerter',
	'chat',
	'backtest',
	'miner',
)

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'alpha3.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, "templates")],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'alpha3.wsgi.application'
ASGI_APPLICATION = "alpha3.routing.application"

CACHES = {
	'default': {
		'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
		'LOCATION': 'unix:/tmp/memcached.sock',
	}
}

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.postgresql_psycopg2',
		'NAME': 'psqlalphalive',
		'USER': 'psqlalpha',
		'PASSWORD': 'psqlalpha123',
		'HOST': 'psqlalphalive.cvb8cqc2yslc.us-west-2.rds.amazonaws.com',
		'PORT': '',
	}
}

REDIS_SERVER_CONF = {
	'servers' : {
	  'main_server': {
		'HOST' : '127.0.0.1',
		'PORT' : 6379,
		'DATABASE':0,
	}
  }
}

LOGGING = {
	'version': 1,
	'disable_existing_loggers': False,
	'formatters': {
		'simple': {
			'format': '%(levelname)s %(message)s'
		},
	},
	'handlers': {
		'console': {
			'level': 'DEBUG',
			'class': 'logging.StreamHandler',
			'formatter': 'simple'
		},
		'logfile': {
			'level': 'DEBUG',
			'class': 'logging.FileHandler',
			'formatter': 'simple',
			'filename': os.path.join(os.getcwd(),'alphapython.log'),
		},
	},
	'core.handlers': {
		'level': 'DEBUG',
		'propagate': True,

		'handlers': ['console','logfile']
	},
	'root': {
		'level': 'DEBUG',
		'propagate': True,

		'handlers': ['console','logfile']
	},
	'': {
		'handlers': ['console', 'logfile'],
		'propagate': True,
		'level': 'DEBUG',
	},
	'django.request': {
		'handlers': ['console', 'logfile'],
		'propagate': False,
		'level': 'ERROR',  # WARN also shows 404 errors
	},
}

#Redis Chat layer config ------------
redis_host = os.environ.get('REDIS_HOST', 'localhost')

# Channel layer definitions
# http://channels.readthedocs.org/en/latest/deploying.html#setting-up-a-channel-backend
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Calcutta'

USE_I18N = True

USE_L10N = True

USE_TZ = True

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'vsananthu@gmail.com' 
EMAIL_HOST_PASSWORD = 'vsananthu007'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")
# STATICFILES_DIRS = (os.path.join(BASE_DIR, 'staticdir'),)

BROKER_URL = 'amqp://rabbitmq:rabbitpass@localhost:5672/myvhost'
CELERY_IMPORTS = (
	'alerter.tasks',

)

CELERY_RESULT_BACKEND = 'redis://localhost:6379/'
# CELERY_ACCEPT_CONTENT = ['json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'

CELERY_ROUTES = {
	'alerter.tasks.add_tick': {'queue': 'ticks'},
	'alerter.tasks.send_alert': {'queue': 'celery'},
	'alerter.tasks.write_tick_to_file': {'queue': 'celery'},
}